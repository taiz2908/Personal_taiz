Imp Links:
1. https://www.geeksforgeeks.org/shell-script-to-perform-operations-on-a-file/
2.Complete Real-time Shell Scripting Tutorial in One video | Beginer to Advance Level:
https://www.youtube.com/watch?v=wFAAdla2JXs
3.



-----------------------------------------------------
Arithmatic Examples: [ +, -, /*, %, / ]
read a b
echo "addition: ` expr $a + $b `"
echo "Substraction: ` expr $a - $b `"
echo "Multiplication: ` expr $a \* $b `"
echo "Division: ` expr $a / $b `"
echo "Reminder: ` expr $a % $b `"

Relational Operators: 
-eq	Checks if the value of two operands are equal or not; if yes, then the condition becomes true.	
-ne	Checks if the value of two operands are equal or not; if values are "not equal", then the condition becomes true.	
-gt	Checks if the value of left operand is "greater than" the value of right operand; if yes, then the condition becomes true.
-lt	Checks if the value of left operand is "less than" the value of right operand; if yes, then the condition becomes true.
-ge	Checks if the value of left operand is "greater than or equal to" the value of right operand; if yes, then the condition becomes true.
-le	Checks if the value of left operand is "less than or equal to" the value of right operand; if yes, then the condition becomes true.

Logical Operators: Boolean 
!	This is logical negation. This inverts a true condition into false and vice versa.	
-o	This is logical OR. If one of the operands is true, then the condition becomes true.
-a	This is logical AND. If both the operands are true, then the condition becomes true otherwise false.

Statements:
1. simple if
 if [ condition ]; then
 echo "statement"
 fi

2. if else
 if [ condition ]; then
 echo "statement-1"
 else
 echo "statement-2"
 fi

3. if else if

4. nested if
 if [ condition ]; then
 echo "statement"
   if [ condition ]; then
   echo "statement-1"
   else
   echo "statement-2"
 else
 echo "statement"
 fi


-----------------: Scripts Examples: --------------------

Ex:1, To check file is present in a specific location or not,
 - Note:  If directory then use -d in place of -f

 #! /bin/bash
 file=/opt/demo.txt
 if [ -f "$file" ];then
 echo "file is present"
 else
 echo "file is not present"
 fi

Ex:2, Printing 1-10.
a=1
while [ $a -le 10 ] ;do
echo "$a"
((a++))
done

Ex:3, Taking i/p and doing arithmatic operations.
 read a b
 echo "Addition: `expr $a + $b `"
 echo "Substraction: `expr $a - $b `"
 echo "Multiplication: `expr $a \* $b `"
 echo "Division: `expr $a / $b `"
 echo "Reminder: `expr $a % $b `"

Ex:4, Taking i/p and Comparing among three Big number.
 read a b c
 if [ $a -gt $b -a $b -gt $c ];then
 echo "a is big"
 elif [ $b -gt $c ];then
 echo "b is big"
 else
 echo "c is big"
 fi

Ex:5, Printing 1-10.
 num=1
 while [ $num -le 10 ];do
 echo "$num"
 ((num++)) #increment by 1
 done

Ex:6, Printing 10 to 1.
 num=10
 while [ $num -ge 1 ];do
 echo "$num"
 ((num--)) #decrement by 1
 done

Ex:7 Printing 10 to 1 in a single line by using for loop
 for (( counter=10; counter>0; counter-- ))
 do
 echo -n "$counter "
 done

