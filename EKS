EKS Cluster Setup:
 - https://www.youtube.com/watch?v=1O-I7NtwCeE Kubernetes Course| EKS Cluster Setup | An easiest way with step by step instructions. PART-1
 - https://www.youtube.com/watch?v=zjhsVsCI3gc PART-2, Kubernetes .. EKS Cluster Scaling
---
 - Kubernetes hands on introduction (2023) | Amazon EKS Workshop
   https://www.youtube.com/watch?v=_TFk5jQr2lk
---
 - Setup Kubernetes using Terraform | EKS setup using terraform | Provision EKS on AWS:
   https://www.youtube.com/watch?v=acnpInts120&t=96s

---- Study / Reference Materials ----
- https://aws.amazon.com/eks/getting-started/
- https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html
- https://eksctl.io/

=============================: EKS Cluster Setup â€“ eksctl :======================================
Intro:
 - Managed kubernetes services
 - AWS manage master node
 - install necessary apps   
 - scaling & backups
 - we can create the cluster via 
   - Consol
   - Cloud Formation
   - AWS CLI by eksctl 
   - Terraform
 - eksctl - cli for amazon EKS [needs to authenticate with aws, how? by using aws_access_key & secrete_access_key]
 - eksctl create cluster --> single cmnd can create the cluster. 

Prerequisites:
 1. kubectl : 1.27 or later
 2. eksctl : 0.14.0 or later
 3. Required IAM permissions 

Step-1,
 - AWS a/c
 - An existing VPC and subnets that meet Amazon EKS requirements/ if not we can create it. 
 - Need to create IAM role & security group [ aws user with lists of permission's]

Step-2, Create worker node/ EKS Clinet i.e., ec2 instance and connect to cluster
 - create a node group 
 - choose cluster it'll attach to
 - define security groups, select instance type, resources.  
 - define max & min number of nodes.
Need to install:
 1. AWS CLI: 2.11.3 or later or 1.27.93 or later.
 2. kubectl : 1.27 or later
 3. Required IAM permissions 
   - AWScloudformationfull access
   - IAMfullaccess
   - amazon ec2 full access
   - Administrator full access.

Step-3, 
After that we can run:
 - eksctl create cluster --name <cluster_name> --region <region_name> --node-type <t2.medium>
i.e.,
 - Create control plane with IAM role
 - give name, select k8s version
 - choose region & vpc
 - choose security for the cluster

------------------: Scripts :--------------------------
# Installing AWS CLI
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

# Installing eksctl
ARCH=amd64
PLATFORM=$(uname -s)_$ARCH
curl -sLO "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
curl -sL "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
sudo mv /tmp/eksctl /usr/local/bin

# Installing Kubectl
curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/amd64/kubectl
chmod +x ./kubectl
mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
kubectl version --short --client

# IAM PERMISSIONS:
IAM-->RoleS-->Create role--> AWS SERVICE--> EC2
 - AWSCloudFormationFullAccess
 - AdministratorAccess	
 - IAMFullAccess	
 - AmazonEC2FullAccess	
 - save it. 
After that Attach to EC2 m/c.

# Creating the cluster by using eksctl cmd utility.
eksctl create cluster --name ibraur-cluster --region us-east-1 --node-type t2.small
eksctl delete cluster ibraur-cluster --region us-east-1

===============================: EKS Cluster Scaling :====================================
 - Auto scaling group - Horizontal scaling. 
 - eksctl get cluster --region <region_name> - to check how many cluster running in that region. 
 - eksctl get nodegroup --region <region_name> --cluster <cluster_name> - to check node group. 
 - eksctl scale nodegroup --cluster <cluster_name> --nodes 4 --nodes-max 4 --name <node_group_name> --region <region_name> - scaling the node. 

==============================: Setup Kubernetes using Terraform :=======================
1. Create VPC
2. Create extra subnet for k8s
3. Create EC2 Instance
4. Create security groups for k8s
5. Create IAM Roles.
6. Create IAM policies.
7. Attach Roles
8. Create EKS Cluster
9. Create Node Group

==========: Setup EKS Cluster using eksctl and Deploy Springboot Microservices into EKS using Jenkins Pipeline ;=====
Ref: 
- https://www.youtube.com/watch?v=C1BlN66s9yo
